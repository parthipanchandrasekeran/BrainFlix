{"ast":null,"code":"var _jsxFileName = \"/Users/parthipanchandrasekaran/brain-flix-app/client/src/components/VideoPage.js\";\nimport React, { Component } from \"react\";\nimport \"../styles/VideoDetails.scss\";\nimport \"../styles/hero-container.scss\";\nimport \"../styles/commentsSection.scss\";\nimport \"../styles/CommentsAdder.scss\";\nimport \"../styles/VideoList.scss\";\nimport VideoDetails from \"./VideoDetails/VideoDetails\";\nimport HeroVideo from \"./HeroVideo\";\nimport dateFormatter from \"./VideoDetails/dateFormatter\";\nimport Comments from \"./Comments/Comments\";\nimport commentCounter from \"./Comments/commentCounter\";\nimport CommentDetails from \"./Comments/commentDetails\";\nimport VideoList from \"./VideoList/VideoList\";\nimport VideoListHeader from \"./VideoList/VideoListHeader\";\nimport axios from \"axios\";\nimport uuid from \"react-native-uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"39558d9d-6a0f-4a5d-8b8c-84eea03ecabf\";\nexport default class VideoPage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      sideVideoList: [],\n      mainVideoList: [],\n      mainVideoListComment: [],\n      defaultID: \"\",\n      firstVideoid: \"\",\n      tempComments: \"\"\n    };\n\n    this.deleteComment = commentid => {\n      axios.delete(`http://localhost:4000/videos/${this.state.defaultID}/comments/${commentid}`).then(response => {\n        this.setState({\n          mainVideoListComment: response.data[0].comments\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.state.tempComments !== \"\" ? this.postComment() : alert(\"Please Enter Something\");\n      this.setState({\n        tempComments: \"\"\n      });\n    };\n\n    this.handleComment = event => {\n      this.setState({\n        tempComments: event.target.value\n      });\n    };\n\n    this.likeIncrement = (event, videoID) => {\n      axios.put(\"http://localhost:4000/videos/\" + videoID + \"/likes\").then(success => {\n        this.setState({\n          mainVideoList: success.data[0]\n        });\n        console.log(videoID);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:4000/videos/\").then(response => {\n      const videoIDMain = response.data[0].id;\n      this.setState({\n        sideVideoList: response.data\n      });\n      axios.get(\"http://localhost:4000/videos/\" + videoIDMain).then(response => {\n        this.setState({\n          mainVideoList: response.data\n        });\n        this.setState({\n          mainVideoListComment: response.data.comments\n        });\n        this.setState({\n          defaultID: response.data.id\n        });\n      });\n      console.log(this.state.mainVideoList);\n      console.log(this.state.defaultID);\n    });\n  }\n\n  componentDidUpdate(prevprops) {\n    if (prevprops.match.params.videoid !== this.props.match.params.videoid && this.props.match.params.videoid !== undefined && this.props.match.path !== \"/Home\") {\n      axios.get(\"http://localhost:4000/videos/\" + this.props.match.params.videoid).then(response => {\n        axios.get(\"http://localhost:4000/videos/\").then(response => {\n          const filteredArrayList = response.data.filter(video => {\n            return video.id !== this.props.match.params.videoid;\n          });\n          filteredArrayList.unshift(response.data[0]);\n          this.setState({\n            sideVideoList: filteredArrayList\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n        this.setState({\n          mainVideoList: response.data\n        });\n        this.setState({\n          mainVideoListComment: response.data.comments\n        });\n        this.setState({\n          defaultID: this.props.match.params.videoid\n        });\n        this.setState({\n          firstVideoid: \"\"\n        });\n      });\n    } else if (this.props.match.path === \"/Home\" && this.state.firstVideoid === \"\") {\n      axios.get(\"http://localhost:4000/videos/\").then(response => {\n        const videoIDMain = response.data[0].id;\n        this.setState({\n          sideVideoList: response.data\n        });\n        axios.get(\"http://localhost:4000/videos/\" + videoIDMain).then(response => {\n          this.setState({\n            mainVideoList: response.data\n          });\n          this.setState({\n            mainVideoListComment: response.data.comments\n          });\n          this.setState({\n            defaultID: response.data.id\n          });\n          this.setState({\n            firstVideoid: videoIDMain\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      });\n    }\n  }\n\n  updateMainComment() {\n    axios.get(\"http://localhost:4000/videos/\" + this.state.defaultID).then(response => {\n      this.setState({\n        mainVideoListComment: response.data.comments\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  postComment() {\n    axios.post(`http://localhost:4000/videos/${this.state.defaultID}/comments`, {\n      name: \"BrainStation\",\n      comment: this.state.tempComments,\n      likes: 0,\n      id: uuid.v4(),\n      timestamp: Date.now()\n    }).then(response => {\n      console.log(response);\n      this.setState({\n        mainVideoListComment: response.data[0].comments\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const commentAdderList = this.state.mainVideoListComment.map((comments, index) => {\n      return /*#__PURE__*/_jsxDEV(CommentDetails, {\n        name: comments.name,\n        comment: comments.comment,\n        timestamp: dateFormatter(comments.timestamp),\n        commentID: comments.id,\n        deleteComment: this.deleteComment\n      }, uuid.v4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this);\n    });\n    const videoAdderList = this.state.sideVideoList.map((comments, index) => {\n      if (index > 0) {\n        return /*#__PURE__*/_jsxDEV(VideoList, {\n          image: comments.image,\n          title: comments.title,\n          channel: comments.channel,\n          clickedVideoObject: comments\n        }, uuid.v4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this);\n      } else {\n        return;\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeroVideo, {\n        mainVideo: this.state.mainVideoList.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desktop-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"desktop-main__desktop-sub-container\",\n          children: [/*#__PURE__*/_jsxDEV(VideoDetails, {\n            details: this.state.mainVideoList,\n            date: dateFormatter(this.state.mainVideoList.timestamp),\n            likeIncrement: this.likeIncrement\n          }, uuid.v4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Comments, {\n            handleSubmit: this.handleSubmit,\n            count: commentCounter(this.state.mainVideoListComment),\n            handleComment: this.handleComment,\n            value: this.state.tempComments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: commentAdderList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"desktop-main__video-list\",\n          children: [/*#__PURE__*/_jsxDEV(VideoListHeader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: videoAdderList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/parthipanchandrasekaran/brain-flix-app/client/src/components/VideoPage.js"],"names":["React","Component","VideoDetails","HeroVideo","dateFormatter","Comments","commentCounter","CommentDetails","VideoList","VideoListHeader","axios","uuid","API_KEY","VideoPage","state","sideVideoList","mainVideoList","mainVideoListComment","defaultID","firstVideoid","tempComments","deleteComment","commentid","delete","then","response","setState","data","comments","catch","error","console","log","handleSubmit","event","preventDefault","postComment","alert","handleComment","target","value","likeIncrement","videoID","put","success","componentDidMount","get","videoIDMain","id","componentDidUpdate","prevprops","match","params","videoid","props","undefined","path","filteredArrayList","filter","video","unshift","updateMainComment","post","name","comment","likes","v4","timestamp","Date","now","render","commentAdderList","map","index","videoAdderList","image","title","channel"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/VideoDetails.scss\";\nimport \"../styles/hero-container.scss\";\nimport \"../styles/commentsSection.scss\";\nimport \"../styles/CommentsAdder.scss\";\nimport \"../styles/VideoList.scss\";\nimport VideoDetails from \"./VideoDetails/VideoDetails\";\nimport HeroVideo from \"./HeroVideo\";\nimport dateFormatter from \"./VideoDetails/dateFormatter\";\nimport Comments from \"./Comments/Comments\";\nimport commentCounter from \"./Comments/commentCounter\";\nimport CommentDetails from \"./Comments/commentDetails\";\nimport VideoList from \"./VideoList/VideoList\";\nimport VideoListHeader from \"./VideoList/VideoListHeader\";\nimport axios from \"axios\";\n\nimport uuid from \"react-native-uuid\";\n\nconst API_KEY = \"39558d9d-6a0f-4a5d-8b8c-84eea03ecabf\";\n\nexport default class VideoPage extends Component {\n  state = {\n    sideVideoList: [],\n    mainVideoList: [],\n    mainVideoListComment: [],\n    defaultID: \"\",\n    firstVideoid: \"\",\n    tempComments: \"\",\n  };\n\n  componentDidMount() {\n    axios.get(\"http://localhost:4000/videos/\").then((response) => {\n      const videoIDMain = response.data[0].id;\n      this.setState({ sideVideoList: response.data });\n      axios\n        .get(\"http://localhost:4000/videos/\" + videoIDMain)\n        .then((response) => {\n          this.setState({ mainVideoList: response.data });\n          this.setState({ mainVideoListComment: response.data.comments });\n          this.setState({ defaultID: response.data.id });\n        });\n\n      console.log(this.state.mainVideoList);\n      console.log(this.state.defaultID);\n    });\n  }\n\n  componentDidUpdate(prevprops) {\n    if (\n      prevprops.match.params.videoid !== this.props.match.params.videoid &&\n      this.props.match.params.videoid !== undefined &&\n      this.props.match.path !== \"/Home\"\n    ) {\n      axios\n        .get(\"http://localhost:4000/videos/\" + this.props.match.params.videoid)\n        .then((response) => {\n          axios\n            .get(\"http://localhost:4000/videos/\")\n            .then((response) => {\n              const filteredArrayList = response.data.filter((video) => {\n                return video.id !== this.props.match.params.videoid;\n              });\n\n              filteredArrayList.unshift(response.data[0]);\n              this.setState({ sideVideoList: filteredArrayList });\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n          this.setState({ mainVideoList: response.data });\n          this.setState({\n            mainVideoListComment: response.data.comments,\n          });\n          this.setState({ defaultID: this.props.match.params.videoid });\n          this.setState({ firstVideoid: \"\" });\n        });\n    } else if (\n      this.props.match.path === \"/Home\" &&\n      this.state.firstVideoid === \"\"\n    ) {\n      axios.get(\"http://localhost:4000/videos/\").then((response) => {\n        const videoIDMain = response.data[0].id;\n        this.setState({ sideVideoList: response.data });\n        axios\n          .get(\"http://localhost:4000/videos/\" + videoIDMain)\n          .then((response) => {\n            this.setState({ mainVideoList: response.data });\n            this.setState({\n              mainVideoListComment: response.data.comments,\n            });\n            this.setState({ defaultID: response.data.id });\n            this.setState({ firstVideoid: videoIDMain });\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      });\n    }\n  }\n\n  updateMainComment() {\n    axios\n      .get(\"http://localhost:4000/videos/\" + this.state.defaultID)\n      .then((response) => {\n        this.setState({\n          mainVideoListComment: response.data.comments,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  postComment() {\n    axios\n      .post(`http://localhost:4000/videos/${this.state.defaultID}/comments`, {\n        name: \"BrainStation\",\n        comment: this.state.tempComments,\n        likes: 0,\n        id: uuid.v4(),\n        timestamp: Date.now(),\n      })\n      .then((response) => {\n        console.log(response);\n\n        this.setState({\n          mainVideoListComment: response.data[0].comments,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  deleteComment = (commentid) => {\n    axios\n      .delete(\n        `http://localhost:4000/videos/${this.state.defaultID}/comments/${commentid}`\n      )\n      .then((response) => {\n        this.setState({\n          mainVideoListComment: response.data[0].comments,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.state.tempComments !== \"\"\n      ? this.postComment()\n      : alert(\"Please Enter Something\");\n    this.setState({ tempComments: \"\" });\n  };\n\n  handleComment = (event) => {\n    this.setState({ tempComments: event.target.value });\n  };\n\n  likeIncrement = (event, videoID) => {\n    axios\n      .put(\"http://localhost:4000/videos/\" + videoID + \"/likes\")\n      .then((success) => {\n        this.setState({ mainVideoList: success.data[0] });\n        console.log(videoID);\n      });\n  };\n\n  render() {\n    const commentAdderList = this.state.mainVideoListComment.map(\n      (comments, index) => {\n        return (\n          <CommentDetails\n            key={uuid.v4()}\n            name={comments.name}\n            comment={comments.comment}\n            timestamp={dateFormatter(comments.timestamp)}\n            commentID={comments.id}\n            deleteComment={this.deleteComment}\n          />\n        );\n      }\n    );\n\n    const videoAdderList = this.state.sideVideoList.map((comments, index) => {\n      if (index > 0) {\n        return (\n          <VideoList\n            key={uuid.v4()}\n            image={comments.image}\n            title={comments.title}\n            channel={comments.channel}\n            clickedVideoObject={comments}\n          />\n        );\n      } else {\n        return;\n      }\n    });\n\n    return (\n      <>\n        <HeroVideo mainVideo={this.state.mainVideoList.image} />\n        <div className=\"desktop-main\">\n          <div className=\"desktop-main__desktop-sub-container\">\n            <VideoDetails\n              details={this.state.mainVideoList}\n              key={uuid.v4()}\n              date={dateFormatter(this.state.mainVideoList.timestamp)}\n              likeIncrement={this.likeIncrement}\n            />\n            <Comments\n              handleSubmit={this.handleSubmit}\n              count={commentCounter(this.state.mainVideoListComment)}\n              handleComment={this.handleComment}\n              value={this.state.tempComments}\n            />\n\n            <div>{commentAdderList}</div>\n          </div>\n          <div className=\"desktop-main__video-list\">\n            <VideoListHeader />\n            <div>{videoAdderList}</div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}