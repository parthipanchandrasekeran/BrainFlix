{"ast":null,"code":"var _jsxFileName = \"/Users/parthipanchandrasekaran/brain-flix-app/src/components/VideoPage.js\";\nimport React, { Component } from \"react\";\nimport \"../styles/VideoDetails.scss\";\nimport \"../styles/hero-container.scss\";\nimport \"../styles/commentsSection.scss\";\nimport \"../styles/CommentsAdder.scss\";\nimport \"../styles/VideoList.scss\";\nimport VideoDetails from \"./VideoDetails/VideoDetails\";\nimport HeroVideo from \"./HeroVideo\";\nimport dateFormatter from \"./VideoDetails/dateFormatter\";\nimport Comments from \"./Comments/Comments\";\nimport commentCounter from \"./Comments/commentCounter\";\nimport CommentDetails from \"./Comments/CommentDetails\";\nimport VideoList from \"./VideoList/VideoList\";\nimport VideoListHeader from \"./VideoList/VideoListHeader\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"c5b58916-1e21-48cf-843c-707a73c05673\";\nexport default class VideoPage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      sideVideoList: [],\n      mainVideoList: [],\n      mainVideoListComment: [],\n      defaultID: \"\",\n      firstVideoid: \"\",\n      tempComments: \"\"\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.postComment();\n      this.setState({\n        tempComments: \"\"\n      });\n    };\n\n    this.handleComment = event => {\n      this.setState({\n        tempComments: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://project-2-api.herokuapp.com/videos?api_key=\" + API_KEY).then(response => {\n      const videoIDMain = response.data[0].id;\n      this.setState({\n        sideVideoList: response.data\n      });\n      axios.get(\"https://project-2-api.herokuapp.com/videos/\" + videoIDMain + \"?api_key=\" + API_KEY).then(response => {\n        this.setState({\n          mainVideoList: response.data\n        });\n        this.setState({\n          mainVideoListComment: response.data.comments\n        });\n        this.setState({\n          defaultID: response.data.id\n        });\n      });\n    });\n  }\n\n  componentDidUpdate(prevprops) {\n    if (prevprops.match.params.videoid !== this.props.match.params.videoid && this.props.match.params.videoid !== undefined && this.props.match.path !== \"/Home\") {\n      axios.get(\"https://project-2-api.herokuapp.com/videos/\" + this.props.match.params.videoid + \"?api_key=\" + API_KEY).then(response => {\n        axios.get(\"https://project-2-api.herokuapp.com/videos?api_key=\" + API_KEY).then(response => {\n          const filteredArrayList = response.data.filter(video => {\n            return video.id !== this.props.match.params.videoid;\n          });\n          filteredArrayList.unshift(response.data[0]);\n          this.setState({\n            sideVideoList: filteredArrayList\n          });\n        });\n        this.setState({\n          mainVideoList: response.data\n        });\n        this.setState({\n          mainVideoListComment: response.data.comments\n        });\n        this.setState({\n          defaultID: this.props.match.params.videoid\n        });\n        this.setState({\n          firstVideoid: \"\"\n        });\n      });\n    } else if (this.props.match.path === \"/Home\" && this.state.firstVideoid === \"\") {\n      axios.get(\"https://project-2-api.herokuapp.com/videos?api_key=\" + API_KEY).then(response => {\n        const videoIDMain = response.data[0].id;\n        this.setState({\n          sideVideoList: response.data\n        });\n        axios.get(\"https://project-2-api.herokuapp.com/videos/\" + videoIDMain + \"?api_key=\" + API_KEY).then(response => {\n          this.setState({\n            mainVideoList: response.data\n          });\n          this.setState({\n            mainVideoListComment: response.data.comments\n          });\n          this.setState({\n            defaultID: response.data.id\n          });\n          this.setState({\n            firstVideoid: videoIDMain\n          });\n        });\n      });\n    }\n  }\n\n  updateMainComment() {\n    axios.get(\"https://project-2-api.herokuapp.com/videos/\" + this.state.defaultID + \"?api_key=\" + API_KEY).then(response => {\n      this.setState({\n        mainVideoListComment: response.data.comments\n      });\n    });\n  }\n\n  postComment() {\n    axios.post(`https://project-2-api.herokuapp.com/videos/${this.state.defaultID}/comments?api_key=${API_KEY}`, {\n      name: \"BrainStation\",\n      comment: this.state.tempComments\n    }).then(response => {\n      this.updateMainComment();\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const commentAdderList = this.state.mainVideoListComment.map(comments => {\n      return /*#__PURE__*/_jsxDEV(CommentDetails, {\n        name: comments.name,\n        comment: comments.comment,\n        timestamp: dateFormatter(comments.timestamp),\n        commentID: comments.id\n      }, comments.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this);\n    });\n    const videoAdderList = this.state.sideVideoList.map((comments, index) => {\n      if (index > 0) {\n        return /*#__PURE__*/_jsxDEV(VideoList, {\n          image: comments.image,\n          title: comments.title,\n          channel: comments.channel,\n          clickedVideoObject: comments\n        }, comments.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this);\n      } else {\n        return;\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeroVideo, {\n        mainVideo: this.state.mainVideoList.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desktop-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"desktop-main__desktop-sub-container\",\n          children: [/*#__PURE__*/_jsxDEV(VideoDetails, {\n            details: this.state.mainVideoList,\n            date: dateFormatter(this.state.mainVideoList.timestamp)\n          }, this.state.mainVideoList.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Comments, {\n            handleSubmit: this.handleSubmit,\n            count: commentCounter(this.state.mainVideoListComment),\n            handleComment: this.handleComment,\n            value: this.state.tempComments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: commentAdderList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"desktop-main__video-list\",\n          children: [/*#__PURE__*/_jsxDEV(VideoListHeader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: videoAdderList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/parthipanchandrasekaran/brain-flix-app/src/components/VideoPage.js"],"names":["React","Component","VideoDetails","HeroVideo","dateFormatter","Comments","commentCounter","CommentDetails","VideoList","VideoListHeader","axios","API_KEY","VideoPage","state","sideVideoList","mainVideoList","mainVideoListComment","defaultID","firstVideoid","tempComments","handleSubmit","event","preventDefault","postComment","setState","handleComment","target","value","componentDidMount","get","then","response","videoIDMain","data","id","comments","componentDidUpdate","prevprops","match","params","videoid","props","undefined","path","filteredArrayList","filter","video","unshift","updateMainComment","post","name","comment","catch","error","console","log","render","commentAdderList","map","timestamp","videoAdderList","index","image","title","channel"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/VideoDetails.scss\";\nimport \"../styles/hero-container.scss\";\nimport \"../styles/commentsSection.scss\";\nimport \"../styles/CommentsAdder.scss\";\nimport \"../styles/VideoList.scss\";\nimport VideoDetails from \"./VideoDetails/VideoDetails\";\nimport HeroVideo from \"./HeroVideo\";\nimport dateFormatter from \"./VideoDetails/dateFormatter\";\nimport Comments from \"./Comments/Comments\";\nimport commentCounter from \"./Comments/commentCounter\";\nimport CommentDetails from \"./Comments/CommentDetails\";\nimport VideoList from \"./VideoList/VideoList\";\nimport VideoListHeader from \"./VideoList/VideoListHeader\";\nimport axios from \"axios\";\nconst API_KEY = \"c5b58916-1e21-48cf-843c-707a73c05673\";\n\nexport default class VideoPage extends Component {\n  state = {\n    sideVideoList: [],\n    mainVideoList: [],\n    mainVideoListComment: [],\n    defaultID: \"\",\n    firstVideoid: \"\",\n    tempComments: \"\",\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://project-2-api.herokuapp.com/videos?api_key=\" + API_KEY)\n      .then((response) => {\n        const videoIDMain = response.data[0].id;\n        this.setState({ sideVideoList: response.data });\n        axios\n          .get(\n            \"https://project-2-api.herokuapp.com/videos/\" +\n              videoIDMain +\n              \"?api_key=\" +\n              API_KEY\n          )\n          .then((response) => {\n            this.setState({ mainVideoList: response.data });\n            this.setState({ mainVideoListComment: response.data.comments });\n            this.setState({ defaultID: response.data.id });\n          });\n      });\n  }\n\n  componentDidUpdate(prevprops) {\n    if (\n      prevprops.match.params.videoid !== this.props.match.params.videoid &&\n      this.props.match.params.videoid !== undefined &&\n      this.props.match.path !== \"/Home\"\n    ) {\n      axios\n        .get(\n          \"https://project-2-api.herokuapp.com/videos/\" +\n            this.props.match.params.videoid +\n            \"?api_key=\" +\n            API_KEY\n        )\n        .then((response) => {\n          axios\n            .get(\n              \"https://project-2-api.herokuapp.com/videos?api_key=\" + API_KEY\n            )\n            .then((response) => {\n              const filteredArrayList = response.data.filter((video) => {\n                return video.id !== this.props.match.params.videoid;\n              });\n\n              filteredArrayList.unshift(response.data[0]);\n              this.setState({ sideVideoList: filteredArrayList });\n            });\n          this.setState({ mainVideoList: response.data });\n          this.setState({\n            mainVideoListComment: response.data.comments,\n          });\n          this.setState({ defaultID: this.props.match.params.videoid });\n          this.setState({ firstVideoid: \"\" });\n        });\n    } else if (\n      this.props.match.path === \"/Home\" &&\n      this.state.firstVideoid === \"\"\n    ) {\n      axios\n        .get(\"https://project-2-api.herokuapp.com/videos?api_key=\" + API_KEY)\n        .then((response) => {\n          const videoIDMain = response.data[0].id;\n          this.setState({ sideVideoList: response.data });\n          axios\n            .get(\n              \"https://project-2-api.herokuapp.com/videos/\" +\n                videoIDMain +\n                \"?api_key=\" +\n                API_KEY\n            )\n            .then((response) => {\n              this.setState({ mainVideoList: response.data });\n              this.setState({\n                mainVideoListComment: response.data.comments,\n              });\n              this.setState({ defaultID: response.data.id });\n              this.setState({ firstVideoid: videoIDMain });\n            });\n        });\n    }\n  }\n\n  updateMainComment() {\n    axios\n      .get(\n        \"https://project-2-api.herokuapp.com/videos/\" +\n          this.state.defaultID +\n          \"?api_key=\" +\n          API_KEY\n      )\n      .then((response) => {\n        this.setState({\n          mainVideoListComment: response.data.comments,\n        });\n      });\n  }\n\n  postComment() {\n    axios\n      .post(\n        `https://project-2-api.herokuapp.com/videos/${this.state.defaultID}/comments?api_key=${API_KEY}`,\n        { name: \"BrainStation\", comment: this.state.tempComments }\n      )\n      .then((response) => {\n        this.updateMainComment();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.postComment();\n    this.setState({ tempComments: \"\" });\n  };\n\n  handleComment = (event) => {\n    this.setState({ tempComments: event.target.value });\n  };\n\n  render() {\n    const commentAdderList = this.state.mainVideoListComment.map((comments) => {\n      return (\n        <CommentDetails\n          key={comments.id}\n          name={comments.name}\n          comment={comments.comment}\n          timestamp={dateFormatter(comments.timestamp)}\n          commentID={comments.id}\n        />\n      );\n    });\n\n    const videoAdderList = this.state.sideVideoList.map((comments, index) => {\n      if (index > 0) {\n        return (\n          <VideoList\n            key={comments.id}\n            image={comments.image}\n            title={comments.title}\n            channel={comments.channel}\n            clickedVideoObject={comments}\n          />\n        );\n      } else {\n        return;\n      }\n    });\n\n    return (\n      <>\n        <HeroVideo mainVideo={this.state.mainVideoList.image} />\n        <div className=\"desktop-main\">\n          <div className=\"desktop-main__desktop-sub-container\">\n            <VideoDetails\n              details={this.state.mainVideoList}\n              key={this.state.mainVideoList.id}\n              date={dateFormatter(this.state.mainVideoList.timestamp)}\n            />\n            <Comments\n              handleSubmit={this.handleSubmit}\n              count={commentCounter(this.state.mainVideoListComment)}\n              handleComment={this.handleComment}\n              value={this.state.tempComments}\n            />\n\n            <div>{commentAdderList}</div>\n          </div>\n          <div className=\"desktop-main__video-list\">\n            <VideoListHeader />\n            <div>{videoAdderList}</div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}