{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unparse = void 0;\n\nconst utils_1 = require(\"./utils\"); // **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n\n\nconst unparse = (buf, offset) => {\n  let i = offset || 0;\n  let bth = utils_1.byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];\n};\n\nexports.unparse = unparse;","map":{"version":3,"sources":["/Users/parthipanchandrasekaran/brain-flix-app/client/node_modules/react-native-uuid/src/unparse.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA,C,CAEA;;;AAEO,MAAM,OAAO,GAAG,CAAC,GAAD,EAAqB,MAArB,KAAwC;AAC7D,MAAI,CAAC,GAAG,MAAM,IAAI,CAAlB;AACA,MAAI,GAAG,GAAG,OAAA,CAAA,SAAV;AAEA,SACE,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CAAH,GACA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CADH,GAEA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CAFH,GAGA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CAHH,GAIA,GAJA,GAKA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CALH,GAMA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CANH,GAOA,GAPA,GAQA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CARH,GASA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CATH,GAUA,GAVA,GAWA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CAXH,GAYA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CAZH,GAaA,GAbA,GAcA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CAdH,GAeA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CAfH,GAgBA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CAhBH,GAiBA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CAjBH,GAkBA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CAlBH,GAmBA,GAAG,CAAC,GAAG,CAAC,CAAC,EAAF,CAAJ,CApBL;AAsBD,CA1BM;;AAAM,OAAA,CAAA,OAAA,GAAO,OAAP","sourcesContent":["import {byteToHex} from './utils';\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n\nexport const unparse = (buf: Array<number>, offset?: number) => {\n  let i = offset || 0;\n  let bth = byteToHex;\n\n  return (\n    bth[buf[i++]] +\n    bth[buf[i++]] +\n    bth[buf[i++]] +\n    bth[buf[i++]] +\n    '-' +\n    bth[buf[i++]] +\n    bth[buf[i++]] +\n    '-' +\n    bth[buf[i++]] +\n    bth[buf[i++]] +\n    '-' +\n    bth[buf[i++]] +\n    bth[buf[i++]] +\n    '-' +\n    bth[buf[i++]] +\n    bth[buf[i++]] +\n    bth[buf[i++]] +\n    bth[buf[i++]] +\n    bth[buf[i++]] +\n    bth[buf[i++]]\n  );\n};\n"]},"metadata":{},"sourceType":"script"}