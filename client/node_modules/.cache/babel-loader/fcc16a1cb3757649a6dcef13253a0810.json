{"ast":null,"code":"var _jsxFileName = \"/Users/parthipanchandrasekaran/brain-flix-app/src/components/VideoPage.js\";\nimport React, { Component } from \"react\";\nimport \"../styles/VideoDetails.scss\";\nimport \"../styles/hero-container.scss\";\nimport \"../styles/commentsSection.scss\";\nimport \"../styles/CommentsAdder.scss\";\nimport \"../styles/VideoList.scss\";\nimport VideoDetails from \"./VideoDetails/VideoDetails\";\nimport HeroVideo from \"./HeroVideo\";\nimport dateFormatter from \"./VideoDetails/dateFormatter\";\nimport Comments from \"./Comments/Comments\";\nimport commentCounter from \"./Comments/commentCounter\";\nimport CommentDetails from \"./Comments/CommentDetails\";\nimport VideoList from \"./VideoList/VideoList\";\nimport VideoListHeader from \"./VideoList/VideoListHeader\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"cdbf441b-edda-4ae3-9dbc-993c52c69a5f\";\nexport default class VideoPage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      sideVideoList: [],\n      mainVideoList: [],\n      mainVideoListComment: [],\n      defaultID: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://project-2-api.herokuapp.com/videos?api_key=\" + API_KEY).then(response => {\n      const videoIDMain = response.data[0].id;\n      this.setState({\n        sideVideoList: response.data\n      });\n      axios.get(\"https://project-2-api.herokuapp.com/videos/\" + videoIDMain + \"?api_key=\" + API_KEY).then(response => {\n        console.log(response.data.id);\n        this.setState({\n          mainVideoList: response.data\n        });\n        this.setState({\n          mainVideoListComment: response.data.comments\n        });\n        this.setState({\n          defaultID: response.data.id\n        });\n      });\n    });\n  }\n\n  componentDidUpdate(prevprops) {\n    if (prevprops.match.params.videoid !== this.props.match.params.videoid && this.props.match.params.videoid !== undefined) {\n      axios.get(\"https://project-2-api.herokuapp.com/videos/\" + this.props.match.params.videoid + \"?api_key=\" + API_KEY).then(response => {\n        axios.get(\"https://project-2-api.herokuapp.com/videos?api_key=\" + API_KEY).then(response => {\n          const filteredArrayList = response.data.filter(video => {\n            return video.id !== this.props.match.params.videoid;\n          });\n          filteredArrayList.unshift(response.data[0]);\n          this.setState({\n            sideVideoList: filteredArrayList\n          });\n        });\n        this.setState({\n          mainVideoList: response.data\n        });\n        this.setState({\n          mainVideoListComment: response.data.comments\n        });\n        this.setState({\n          defaultID: this.props.match.params.videoid\n        });\n      });\n    }\n  }\n\n  render() {\n    const commentAdderList = this.state.mainVideoListComment.map(comments => {\n      return /*#__PURE__*/_jsxDEV(CommentDetails, {\n        name: comments.name,\n        comment: comments.comment,\n        timestamp: dateFormatter(comments.timestamp)\n      }, comments.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    });\n    const videoAdderList = this.state.sideVideoList.map((comments, index) => {\n      if (index > 0) {\n        return /*#__PURE__*/_jsxDEV(VideoList, {\n          image: comments.image,\n          title: comments.title,\n          channel: comments.channel,\n          clickedVideoObject: comments\n        }, comments.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this);\n      } else {\n        return;\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeroVideo, {\n        mainVideo: this.state.mainVideoList.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desktop-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"desktop-main__desktop-sub-container\",\n          children: [/*#__PURE__*/_jsxDEV(VideoDetails, {\n            details: this.state.mainVideoList,\n            date: dateFormatter(this.state.mainVideoList.timestamp)\n          }, this.state.mainVideoList.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Comments, {\n            count: commentCounter(this.state.mainVideoListComment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: commentAdderList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"desktop-main__video-list\",\n          children: [/*#__PURE__*/_jsxDEV(VideoListHeader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: videoAdderList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/parthipanchandrasekaran/brain-flix-app/src/components/VideoPage.js"],"names":["React","Component","VideoDetails","HeroVideo","dateFormatter","Comments","commentCounter","CommentDetails","VideoList","VideoListHeader","axios","API_KEY","VideoPage","state","sideVideoList","mainVideoList","mainVideoListComment","defaultID","componentDidMount","get","then","response","videoIDMain","data","id","setState","console","log","comments","componentDidUpdate","prevprops","match","params","videoid","props","undefined","filteredArrayList","filter","video","unshift","render","commentAdderList","map","name","comment","timestamp","videoAdderList","index","image","title","channel"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/VideoDetails.scss\";\nimport \"../styles/hero-container.scss\";\nimport \"../styles/commentsSection.scss\";\nimport \"../styles/CommentsAdder.scss\";\nimport \"../styles/VideoList.scss\";\nimport VideoDetails from \"./VideoDetails/VideoDetails\";\nimport HeroVideo from \"./HeroVideo\";\nimport dateFormatter from \"./VideoDetails/dateFormatter\";\nimport Comments from \"./Comments/Comments\";\nimport commentCounter from \"./Comments/commentCounter\";\nimport CommentDetails from \"./Comments/CommentDetails\";\nimport VideoList from \"./VideoList/VideoList\";\nimport VideoListHeader from \"./VideoList/VideoListHeader\";\nimport axios from \"axios\";\nconst API_KEY = \"cdbf441b-edda-4ae3-9dbc-993c52c69a5f\";\n\nexport default class VideoPage extends Component {\n  state = {\n    sideVideoList: [],\n    mainVideoList: [],\n    mainVideoListComment: [],\n    defaultID: \"\",\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://project-2-api.herokuapp.com/videos?api_key=\" + API_KEY)\n      .then((response) => {\n        const videoIDMain = response.data[0].id;\n        this.setState({ sideVideoList: response.data });\n        axios\n          .get(\n            \"https://project-2-api.herokuapp.com/videos/\" +\n              videoIDMain +\n              \"?api_key=\" +\n              API_KEY\n          )\n          .then((response) => {\n            console.log(response.data.id);\n            this.setState({ mainVideoList: response.data });\n            this.setState({ mainVideoListComment: response.data.comments });\n            this.setState({ defaultID: response.data.id });\n          });\n      });\n  }\n\n  componentDidUpdate(prevprops) {\n    if (\n      prevprops.match.params.videoid !== this.props.match.params.videoid &&\n      this.props.match.params.videoid !== undefined\n    ) {\n      axios\n        .get(\n          \"https://project-2-api.herokuapp.com/videos/\" +\n            this.props.match.params.videoid +\n            \"?api_key=\" +\n            API_KEY\n        )\n        .then((response) => {\n          axios\n            .get(\n              \"https://project-2-api.herokuapp.com/videos?api_key=\" + API_KEY\n            )\n            .then((response) => {\n              const filteredArrayList = response.data.filter((video) => {\n                return video.id !== this.props.match.params.videoid;\n              });\n\n              filteredArrayList.unshift(response.data[0]);\n              this.setState({ sideVideoList: filteredArrayList });\n            });\n          this.setState({ mainVideoList: response.data });\n          this.setState({\n            mainVideoListComment: response.data.comments,\n          });\n          this.setState({ defaultID: this.props.match.params.videoid });\n        });\n    }\n  }\n\n  render() {\n    const commentAdderList = this.state.mainVideoListComment.map((comments) => {\n      return (\n        <CommentDetails\n          key={comments.id}\n          name={comments.name}\n          comment={comments.comment}\n          timestamp={dateFormatter(comments.timestamp)}\n        />\n      );\n    });\n\n    const videoAdderList = this.state.sideVideoList.map((comments, index) => {\n      if (index > 0) {\n        return (\n          <VideoList\n            key={comments.id}\n            image={comments.image}\n            title={comments.title}\n            channel={comments.channel}\n            clickedVideoObject={comments}\n          />\n        );\n      } else {\n        return;\n      }\n    });\n\n    return (\n      <>\n        <HeroVideo mainVideo={this.state.mainVideoList.image} />\n        <div className=\"desktop-main\">\n          <div className=\"desktop-main__desktop-sub-container\">\n            <VideoDetails\n              details={this.state.mainVideoList}\n              key={this.state.mainVideoList.id}\n              date={dateFormatter(this.state.mainVideoList.timestamp)}\n            />\n            <Comments count={commentCounter(this.state.mainVideoListComment)} />\n\n            <div>{commentAdderList}</div>\n          </div>\n          <div className=\"desktop-main__video-list\">\n            <VideoListHeader />\n            <div>{videoAdderList}</div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}